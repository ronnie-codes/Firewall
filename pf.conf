#
# Default PF configuration file.
#
# This file contains the main ruleset, which gets automatically loaded
# at startup.  PF will not be automatically enabled, however.  Instead,
# each component which utilizes PF is responsible for enabling and disabling
# PF via -E and -X as documented in pfctl(8).  That will ensure that PF
# is disabled only when the last enable reference is released.
#
# Care must be taken to ensure that the main ruleset does not get flushed,
# as the nested anchors rely on the anchor point defined here. In addition,
# to the anchors loaded by this file, some system services would dynamically 
# insert anchors into the main ruleset. These anchors will be added only when
# the system service is used and would removed on termination of the service.
#
# See pf.conf(5) for syntax.
#

#
# com.apple anchor point
#
# scrub-anchor "com.apple/*"
# nat-anchor "com.apple/*"
# rdr-anchor "com.apple/*"
# dummynet-anchor "com.apple/*"
# anchor "com.apple/*"
# load anchor "com.apple" from "/etc/pf.anchors/com.apple"

my_ip = "192.168.48.168/32"

# Options
set block-policy return
set fingerprints "/etc/pf.os"
set state-policy if-bound

# Normalization
scrub all fragment reassemble no-df

# Queueing (if any)

# Translation
nat on en0 from any to any -> (en0)

# Tables
table <chromeenterprise.google> { 216.239.32.27/32 }
table <www.google.com> { 172.217.13.100/32 }
table <accounts.google.com> { 142.251.111.84/32 }
table <accounts.google.ca> { 142.251.16.94/32 }
table <myaccount.google.com> { 172.253.62.84/32 }
table <accounts.youtube.com> { 172.217.165.14/32 }
table <www.gstatic.com> { 172.217.13.99/32 }
table <fonts.gstatic.com> { 142.251.41.35/32 }
table <www.youtube.com> { 172.217.13.206/32, 172.217.13.174/32, 172.217.13.110/32, 172.217.13.142/32 }
table <i.ytimg.com> { 172.217.13.150/32, 172.217.13.118/32, 172.217.13.214/32, 172.217.13.182/32 }
table <challenges.cloudflare.com> { 104.17.2.184/32, 104.17.3.184/32 }
table <chatgpt.com> { 172.64.155.141/32, 104.18.32.115/32 }
table <chat.openai.com> { 104.18.37.228 /32, 172.64.150.28/32 }
table <tcr9i.chat.openai.com> { 104.18.33.170/32, 172.64.154.86/32 }
table <www.oaistatic.com> { 172.64.146.98/32, 104.18.41.158/32 }
table <cdn.oaistatic.com> { 104.18.41.158/32, 172.64.146.98/32 }
table <auth.openai.com> { 104.18.41.241/32, 172.64.146.15/32 }
table <auth0.openai.com> { 104.18.35.28/32, 172.64.152.228/32 }
table <www.github.com> { 140.82.113.3/32 }
table <github.githubassets.com> { 185.199.108.154/32, 185.199.109.154/32, 185.199.110.154/32, 185.199.111.154/32 }
table <mail.google.com> { 172.217.13.133/32 }
table <admin.google.com> { 172.217.13.206/32 }
table <www.amazon.com> { 31.169.123.33/32 }
table <docs.google.com> { 172.217.13.174/32 }
table <www.obdev.at> { 167.235.211.211/32 }
table <sw-update.obdev.at> { 167.235.211.213/32 }
table <www.geeksforgeeks.org> { 54.192.51.104/32, 54.192.51.118/32, 54.192.51.27/32, 54.192.51.75/32 }
table <registry-1.docker.io> { 54.236.113.205/32, 54.198.86.24/32, 54.227.20.253/32 }
table <cloudflare.docker.com> { 104.16.97.215/32, 104.16.100.215/32, 104.16.101.215/32, 104.16.98.215/32, 104.16.99.215/32 }

# Filtering
antispoof for en0
block all

# docker
pass out on en0 inet proto tcp from $my_ip to <registry-1.docker.io> port 443
pass out on en0 inet proto tcp from $my_ip to <cloudflare.docker.com> port 443

# geeksforgeeks
pass out on en0 inet proto tcp from $my_ip to <www.geeksforgeeks.org> port 443

# chrome enterprise
pass out on en0 inet proto tcp from $my_ip to <chromeenterprise.google> port 443

# google search
pass out on en0 inet proto tcp from $my_ip to <www.google.com> port 443

# gmail
pass out on en0 inet proto tcp from $my_ip to <mail.google.com> port 443

# google docs
pass out on en0 inet proto tcp from $my_ip to <docs.google.com> port 443

# google accounts
pass out on en0 inet proto tcp from $my_ip to <accounts.google.ca> port 443
pass out on en0 inet proto tcp from $my_ip to <accounts.google.com> port 443
pass out on en0 inet proto tcp from $my_ip to <myaccount.google.com> port 443
pass out on en0 inet proto tcp from $my_ip to <accounts.youtube.com> port 443

# google gstatic
pass out on en0 inet proto tcp from $my_ip to <www.gstatic.com> port 443
pass out on en0 inet proto tcp from $my_ip to <fonts.gstatic.com> port 443

# google admin
pass out on en0 inet proto tcp from $my_ip to <admin.google.com> port 443

# youtube
pass out on en0 inet proto tcp from $my_ip to <www.youtube.com> port 443
pass out on en0 inet proto tcp from $my_ip to <i.ytimg.com> port 443

# cloudflare challenges
pass out on en0 inet proto tcp from $my_ip to <challenges.cloudflare.com> port 443

# chatgpt
pass out on en0 inet proto tcp from $my_ip to <chatgpt.com> port 443
pass out on en0 inet proto tcp from $my_ip to <chat.openai.com>  port 443
pass out on en0 inet proto tcp from $my_ip to <tcr9i.chat.openai.com> port 443
pass out on en0 inet proto tcp from $my_ip to <www.oaistatic.com> port 443
pass out on en0 inet proto tcp from $my_ip to <cdn.oaistatic.com> port 443
pass out on en0 inet proto tcp from $my_ip to <auth.openai.com> port 443
pass out on en0 inet proto tcp from $my_ip to <auth0.openai.com> port 443

# github
pass out on en0 inet proto tcp from $my_ip to <www.github.com> port 443
pass out on en0 inet proto tcp from $my_ip to <github.githubassets.com> port 443

# amazon
pass out on en0 inet proto tcp from $my_ip to <www.amazon.com> port 443

# little snitch
pass out on en0 inet proto tcp from $my_ip to <www.obdev.at> port 443
pass out on en0 inet proto tcp from $my_ip to <sw-update.obdev.at> port 443
